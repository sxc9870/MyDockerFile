
##本地定制网段
docker network create --subnet=172.172.0.0/254 sxc-redis

docker rm $(docker ps -aq) -f


python build-server.py  0.0.0.0 123456 m 172.172.0.2:6379 o
python build-server.py  0.0.0.0 123456 s 172.172.0.2:6379 o
python build-server.py  0.0.0.0 123456 m 172.172.0.2:6379 c
python build-server.py  0.0.0.0 123456 s 172.172.0.2:6379 c


python run.py  redis-master 56379:6379  redis:master-server sxc-redis 172.172.0.2
python run.py  redis-slave  56389:6379  redis:slave-server2 sxc-redis 172.172.0.12
python run.py  redis-slave  56399:6379  redis:slave-server2 sxc-redis 172.172.0.22


python build-server.py  0.0.0.0 123456 m 172.172.0.3:6379 c
python build-server.py  0.0.0.0 123456 s 172.172.0.3:6379 c


python run.py  redis-master1 56279:6379  redis:master-server sxc-redis 172.172.0.3
python run.py  redis-slave1  56289:6379  redis:slave-server sxc-redis 172.172.0.13



python build-server.py  0.0.0.0 123456 m 172.172.0.4:6379 c
python build-server.py  0.0.0.0 123456 s 172.172.0.4:6379 c


python run.py  redis-master1 56279:6379  redis:master-server sxc-redis 172.172.0.3
python run.py  redis-slave1  56289:6379  redis:slave-server sxc-redis 172.172.0.13

python run.py  redis-master2 56179:6379  redis:master-server sxc-redis 172.172.0.4
python run.py  redis-slave2  56189:6379  redis:slave-server sxc-redis 172.172.0.14

python run.py  redis-master3 56079:6379  redis:master-server sxc-redis 172.172.0.5
python run.py  redis-slave3  56089:6379  redis:slave-server sxc-redis 172.172.0.15


python build-sentinel.py   0.0.0.0 123456 172.172.0.3:6379
python run.py  redis-sentinel  46379:26379 redis:sentinel sxc-redis 172.172.0.12
python run.py  redis-sentinel1  46380:26379 redis:sentinel sxc-redis 172.172.0.13
python run.py  redis-sentinel2  46381:26379 redis:sentinel sxc-redis 172.172.0.14




docker exec -it redis-master  tail -f /data/redis/redis.log
docker exec -it redis-sentinel  tail -f /data/redis/sentinel.log

docker exec -it redis-slave  /usr/bin/redis-cli -a 123456 info replication
docker exec -it redis-slave1  /usr/bin/redis-cli -a 123456 info replication
docker exec -it redis-slave2  /usr/bin/redis-cli -a 123456 info replication



{"host": "172.172.0.4", "port": "6379"},{"host": "172.172.0.2", "port": "6379"},{"host": "172.172.0.3", "port": "6379"},{"host": "172.172.0.14", "port": "6379"},{"host": "172.172.0.12", "port": "6379"},{"host": "172.172.0.13", "port": "6379"}


./redis-trib.rb  create --replicas 1 172.172.0.4:6379 172.172.0.3:6379 172.172.0.2:6379 172.172.0.14:6379 172.172.0.13:6379 172.172.0.12:6379

redis-cli --cluster create 192.168.239.130:56279 192.168.239.130:56179 192.168.239.130:56079 192.168.239.130:56289 192.168.239.130:56189 192.168.239.130:56089 --cluster-replicas 1 -a 123456
redis-cli --cluster create 172.172.0.4:6379 172.172.0.3:56279 172.172.0.2:6379 172.172.0.14:6379 172.172.0.13:6379 172.172.0.12:6379 --cluster-replicas 1 -a 123456


# 要带-a 密码访问 不然每次转移都会显示没有权限
redis-cli -h 172.172.0.2  -c -a 123456
--cluster create 127.0.0.1:56279 127.0.0.1:56179 127.0.0.1:56079 127.0.0.10:56289 127.0.0.1:56189 127.0.0.1:56089 --cluster-replicas 1 -a 123456



docker run -itd  --name redis1 --net=host   -p 56397:6397  redis-master
docker run -itd  --name redis2 --net=host   -p 56398:6397  redis-master
docker run -itd  --name redis3 --net=host   -p 56399:6397  redis-master
docker run -itd  --name redis4 --net=host   -p 56497:6397  redis-master
docker run -itd  --name redis5 --net=host   -p 56498:6397  redis-master
docker run -itd  --name redis6 --net=host   -p 56499:6397  redis-master